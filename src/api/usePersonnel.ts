import type { Factory } from "./useFactories"

export interface Personnel {
  personalId: string
  name: string
  factories: Factory["name"][]
  email: string
}

const usePersonnel = () => {
  const API_URL = "http://localhost:8080/personnel"

  const getAllPersonnel = async () => {
      try {
        const personnel: Personnel[] = await fetch(API_URL).then(res => res.json())
        return personnel
      } catch(err) {
        console.error(err, "Error fetching factories");
        return []
      }
  }

  // Add new personnel
  // Omit personalId as it will be generated by the backend
  const addNewPersonnel = async (person: Omit<Personnel, "personalId">) => {
    try {
      const newPerson: Personnel = await fetch(API_URL, {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(person)
      }).then(res => res.json())

      return newPerson
    }
    catch(err) {
      console.error(err, "Error adding new personnel");
      throw err
    }
  }

  const deletePersonnel = async (person: Personnel): Promise<Personnel> => {
    try {
      const personalId = person.personalId
      const result = await fetch(`${API_URL}/${personalId}`, {
        method: "DELETE",
      }).then(res => res.json())
      return result
    }
    catch(err) {
      console.error(err, "Error deleting personnel");
      throw err
    }
  }

  return { getAllPersonnel, addNewPersonnel, deletePersonnel}
}

export default usePersonnel;